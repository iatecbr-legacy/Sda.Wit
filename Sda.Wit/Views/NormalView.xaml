<UserControl x:Class="Sda.Wit.Views.NormalView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:views="clr-namespace:Sda.Wit.Views"
             xmlns:local="clr-namespace:Sda.Wit.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:Converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>

        <materialDesign:DialogHost x:Name="abc" Identifier="RootDialog" SnackbarMessageQueue="{Binding MessageQueue, ElementName=MainSnackbar}" Loaded="DialogHost_Loaded">

            <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding IsChecked, ElementName=MenuToggleButton}">
                <materialDesign:DrawerHost.LeftDrawerContent>
                    <DockPanel MinWidth="212">
                        <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" DockPanel.Dock="Top" HorizontalAlignment="Right" Margin="16" IsChecked="{Binding IsChecked, ElementName=MenuToggleButton, Mode=TwoWay}" />
                        <ListBox Margin="0 16 0 16" SelectedIndex="0">
                            <ListBoxItem x:Name="lbiChangeQuery" MouseLeftButtonUp="lbiChangeQuery_MouseLeftButtonUp">
                                <ListBoxItem.Content>
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="25"/>
                                            <ColumnDefinition Width="150"/>
                                            <ColumnDefinition Width="50"/>
                                        </Grid.ColumnDefinitions>
                                        <materialDesign:PackIcon Kind="Database" HorizontalAlignment="Left" Grid.Column="0"/>
                                        <TextBlock Text="Alterar Query" VerticalAlignment="Center" Grid.Column="1"/>
                                    </Grid>
                                </ListBoxItem.Content>
                            </ListBoxItem>
                            <ListBoxItem x:Name="lbiAlwaysOnTop" MouseLeftButtonUp="lbiAlwaysOnTop_MouseLeftButtonUp">
                                <ListBoxItem.Content>
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="25"/>
                                            <ColumnDefinition Width="150"/>
                                            <ColumnDefinition Width="50"/>
                                        </Grid.ColumnDefinitions>
                                        <materialDesign:PackIcon Kind="FormatVerticalAlignTop" HorizontalAlignment="Left" Grid.Column="0"/>
                                        <TextBlock Text="Sempre na frente" VerticalAlignment="Center" Grid.Column="1"/>
                                        <ToggleButton x:Name="ckbAlwaysOnTop" IsThreeState="False" IsChecked="{Binding AlwaysOnTop, Mode=TwoWay}" Checked="ckbAlwaysOnTop_Checked" Unchecked="ckbAlwaysOnTop_Checked" HorizontalAlignment="Right" Grid.Column="2"/>
                                    </Grid>
                                </ListBoxItem.Content>
                            </ListBoxItem>
                            <ListBoxItem x:Name="lbiDarkTheme" MouseLeftButtonUp="lbiDarkTheme_MouseLeftButtonUp">
                                <ListBoxItem.Content>
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="25"/>
                                            <ColumnDefinition Width="150"/>
                                            <ColumnDefinition Width="50"/>
                                        </Grid.ColumnDefinitions>
                                        <materialDesign:PackIcon Kind="ThemeLightDark" HorizontalAlignment="Left" Grid.Column="0"/>
                                        <TextBlock Text="Alterar tema" VerticalAlignment="Center" Grid.Column="1"/>
                                        <ToggleButton x:Name="tgbDark" Grid.Column="2" HorizontalAlignment="Right" Checked="tgbDark_Checked" Unchecked="tgbDark_Checked"/>
                                    </Grid>
                                </ListBoxItem.Content>
                            </ListBoxItem>
                            <ListBoxItem x:Name="lbiLogout" MouseLeftButtonUp="lbiLogout_MouseLeftButtonUp">
                                <ListBoxItem.Content>
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="25"/>
                                            <ColumnDefinition Width="150"/>
                                            <ColumnDefinition Width="50"/>
                                        </Grid.ColumnDefinitions>
                                        <materialDesign:PackIcon Kind="Logout" HorizontalAlignment="Left" Grid.Column="0"/>
                                        <TextBlock Text="Logout" VerticalAlignment="Center" Grid.Column="1"/>
                                    </Grid>
                                </ListBoxItem.Content>
                            </ListBoxItem>
                        </ListBox>
                    </DockPanel>
                </materialDesign:DrawerHost.LeftDrawerContent>

                <DockPanel>
                    <materialDesign:ColorZone x:Name="TitleBar" Padding="16" materialDesign:ShadowAssist.ShadowDepth="Depth2" Mode="PrimaryMid" DockPanel.Dock="Top" MouseLeftButtonDown="TitleBar_MouseDown">
                        <DockPanel>
                            <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" IsChecked="False" x:Name="MenuToggleButton"/>
                            <!--<materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges" StaysOpen="False">
                                <StackPanel>
                                    <Button Content="Hello World" />
                                    <Button Content="Nice Popup"/>
                                    <Button Content="Can't Touch This" IsEnabled="False" />
                                    <Separator/>
                                    <Button Content="Goodbye" />
                                    -->
                            <!--<Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Grid.Row="0" Margin="0 0 28 -20">
                                    <Viewbox Width="22" Height="22">
                                        <Canvas Width="24" Height="24">
                                            <Path Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" />
                                        </Canvas>
                                    </Viewbox>
                                </Button>-->
                            <!--
                                </StackPanel>
                            </materialDesign:PopupBox>-->
                            <TextBlock Text="{Binding ElapsedTime}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22"/>
                        </DockPanel>
                    </materialDesign:ColorZone>

                    <ScrollViewer>
                        <ItemsControl ItemsSource="{Binding WorkItems, Mode=TwoWay}" Grid.IsSharedSizeScope="True" Margin="0 0 0 16">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border x:Name="Border" Padding="0 16 0 0">
                                        <views:WorkItemCard WorkItem="{Binding}" />
                                        <!--<views:WorkItemCard WorkItem="{Binding Path=., Mode=TwoWay}"/>-->
                                        <!--<views:WorkItemCard WorkItem="{Binding RelativeSource={RelativeSource TemplatedParent},Path=DataContext}"/>-->

                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </DockPanel>
            </materialDesign:DrawerHost>
        </materialDesign:DialogHost>

        <materialDesign:Snackbar x:Name="snackbar" MessageQueue="{materialDesign:MessageQueue}"/>
        <materialDesign:Snackbar x:Name="SnackbarOne" IsActive="{Binding IsTimerRunning}">
            <materialDesign:SnackbarMessage Content="{Binding ElapsedTime}" HorizontalAlignment="Center"/>
        </materialDesign:Snackbar>

    </Grid>
</UserControl>
